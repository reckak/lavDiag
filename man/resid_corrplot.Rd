% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resid_corrplot.R
\name{resid_corrplot}
\alias{resid_corrplot}
\title{Corrplot of residual correlations (Bentler-type "cor")}
\usage{
resid_corrplot(
  fit,
  order = c("original", "AOE", "FPC", "hclust", "alphabet"),
  hclust.method = c("complete", "ward", "ward.D", "ward.D2", "single", "average",
    "mcquitty", "median", "centroid"),
  common_scale = TRUE,
  title_prefix = NULL,
  record = FALSE
)
}
\arguments{
\item{fit}{A fitted \code{lavaan} object.}

\item{order}{One of \code{c("original","AOE","FPC","hclust","alphabet")}.}

\item{hclust.method}{One of
\code{c("complete","ward","ward.D","ward.D2","single","average","mcquitty","median","centroid")}.}

\item{common_scale}{Logical; use common symmetric color range across groups? Default \code{TRUE}.}

\item{title_prefix}{Optional character prefix for multi-group plot titles.}

\item{record}{Logical; if \code{TRUE}, return recorded plot(s) via \code{recordPlot()}. Default \code{FALSE}.}
}
\value{
\itemize{
\item If \code{record = FALSE} (default): invisibly returns \code{NULL} (plots are drawn as a side-effect).
\item If \code{record = TRUE}: a \code{recordedplot} (single-group) or a named \code{list} of \code{recordedplot}s (multi-group).
}
}
\description{
Draw corrplot(s) of residual correlations from a fitted \code{lavaan} model.
For multi-group models you can harmonize the color scale across groups via
\code{common_scale = TRUE}. Produces base plots.
}
\details{
If \code{record = TRUE}, returns a recorded plot object (single-group) or a named
list of recorded plots (multi-group) created with \code{grDevices::recordPlot()}.
You can later replay them with \code{grDevices::replayPlot()}.
}
\examples{
HS.model <- '
  visual  =~ x1 + x2 + x3
  textual =~ x4 + x5 + x6
  speed   =~ x7 + x8 + x9
'
fit <- lavaan::cfa(HS.model, data = lavaan::HolzingerSwineford1939)
# draw only:
resid_corrplot(fit, order = "hclust")
# capture plot object:
rec <- resid_corrplot(fit, order = "hclust", record = TRUE)
# later:
if (interactive()) grDevices::replayPlot(rec)

}
